function ngsCNA(normalDat,tumorDat,sampName,hetFile,smWin,fcThresh,assayID,...
    res,readDepth,intronLength,hetDepthN,hetDepthT,hetDev,targetsFile)
% Calling function to copy number analysis (CNA) and amplification/deletion
% detection.
%
% Jessica Aldrich
% December 7, 2012
% Updated: January 7, 2014
% Modified: April 2015

% load DAT files. DAT files are generated by perl script.
if ischar(smWin)
    smWin=str2num(smWin); %#ok<*ST2NM>
end

if ischar(fcThresh)
    fcThresh=str2num(fcThresh);
end

if ischar(res)
    res=str2num(res);
end

if ischar(readDepth)
    readDepth=str2num(readDepth);
end

if ischar(intronLength)
    intronLength=str2num(intronLength);
end

if ischar(hetDepthN)
   hetDepthN=str2num(hetDepthN); 
end

if ischar(hetDepthT)
   hetDepthT=str2num(hetDepthT); 
end

if ischar(hetDev)
   hetDev=str2num(hetDev); 
end

if hetFile=='0'
    hetFile=str2num(hetFile);
end

% Load DAT files
normal=load(normalDat);
tumor=load(tumorDat);


% Physical coverage
tumormode = mode(tumor(tumor(:,3)>5,3));
normalmode = mode(normal(normal(:,3)>5,3));

log2fc=[];
bafFreq=[];
% Call cnaMedianCenter
switch lower(assayID)
    case 'exome'
	if hetFile==0
            [cna,amp,del,dlr]=cnaMedianCenter(normal,tumor,smWin,fcThresh,assayID,...
                res,readDepth,intronLength,hetFile,hetDepthN,hetDepthT,hetDev,targetsFile);
        else
            [cna,amp,del,dlr,log2fc,bafFreq]=cnaMedianCenter(normal,tumor,smWin,fcThresh,assayID,...
                res,readDepth,intronLength,hetFile,hetDepthN,hetDepthT,hetDev,targetsFile);
        end
    case 'genome'
        
        if hetDepthT == 0 && hetDepthN==0
            hetDepthT=tumormode;
            hetDepthN=normalmode;
        end
        
    	%with filter file but no hets for centering
        if nargin==14 && ~ischar(hetFile)
                [cna,amp,del,dlr]=cnaMedianCenter(normal,tumor,smWin,fcThresh,assayID,...
            res,readDepth,intronLength,hetFile,hetDepthN,hetDepthT,hetDev,targetsFile);

        %with filter file and hets for centering
        elseif nargin==14
            [cna,amp,del,dlr,log2fc,bafFreq]=cnaMedianCenter(normal,tumor,smWin,fcThresh,assayID,...
            res,readDepth,intronLength,hetFile,hetDepthN,hetDepthT,hetDev,targetsFile);

        %without filter file and no hets for centering
        elseif hetFile==0
                [cna,amp,del,dlr]=cnaMedianCenter(normal,tumor,smWin,fcThresh,assayID,...
                res,readDepth,intronLength,hetFile,hetDepthN,hetDepthT,hetDev);

        %without filter file and has hets for centering
        else
            [cna,amp,del,dlr,log2fc,bafFreq]=cnaMedianCenter(normal,tumor,smWin,fcThresh,assayID,...
                res,readDepth,intronLength,hetFile,hetDepthN,hetDepthT,hetDev);

        end

	case 'ffpe'
            assayID = 'exome';
            [cna,amp,del,dlr,log2fc,bafFreq]=cnaMedianCenterFFPE(normal,tumor,smWin,fcThresh,assayID,...
            res,readDepth,intronLength,hetFile,hetDepthN,hetDepthT,hetDev,targetsFile);
end

%  Write cna TSV file
fileName = [sampName,'.cna.tsv'];
writeTSV(fileName,cna,'Fold-Change');

%  Write amp TSV file
fileName = [sampName,'.amp.tsv'];
writeTSV(fileName,amp,'Fold-Change');

%  Write del TSV file
fileName = [sampName,'.del.tsv'];
writeTSV(fileName,del,'Fold-Change');

%  Write del log2fc of HETs file
if ~isempty(log2fc)
    fileName = [sampName,'.hets.tsv'];
    writeTSV(fileName,log2fc,'Fold-Change');
end

%  Write BAF to baf file
if ~isempty(bafFreq)
    fileName = [sampName,'.baf.tsv'];
    writeTSV(fileName,bafFreq,'BAF');
end

% Write physical coverage and noise TXT files
fid = fopen([normalDat,'.cnaStats'],'w+');
fprintf(fid,'%s\t%s\n','NormalPhysCoverage','DLRS');
fprintf(fid,'%d\t%f\n',normalmode,dlr);
fclose(fid);

fid = fopen([tumorDat,'.cnaStats'],'w+');
fprintf(fid,'%s\t%s\n','TumorPhysCoverage','DLRS');
fprintf(fid,'%d\t%f\n',tumormode,dlr);
fclose(fid);

end
